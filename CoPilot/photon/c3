create custom iso with photon os
Copilot said:
Copilot
Creating a custom ISO with Photon OS involves several steps. Here's a general guide to help you get started:

Prerequisites
Install Required Packages:

Ensure you have the following packages installed: python3-pip, git, tar, createrepo_c, binutils, dosfstools, cdrkit, and docker.
On Photon OS, you can install them using:
tdnf install -y python3-pip git tar createrepo_c binutils dosfstools cdrkit
Install Photon OS Installer:

Install the Photon OS installer Python library:
pip3 install git+https://github.com/vmware/photon-os-installer.git
Enable Docker Service:

Start the Docker service and log in to your Docker account:
systemctl start docker.service
docker login
Preparing for Custom Image Generation
Create Custom Package List:

Create a JSON file listing the packages you want to include in your custom ISO. For example:
{
  "packages": ["package1", "package2"],
  "packages_x86_64": ["package3"],
  "packages_aarch64": ["package4"]
}
Clone Photon OS Installer Repository:

Clone the repository and navigate to the installer directory:
git clone https://github.com/vmware/photon-os-installer.git
cd photon-os-installer/photon_installer
Generating the Custom ISO
Build the ISO:
Use the isoBuilder tool to generate the custom ISO. Replace <photon-release-version> and packages_minimal.json with your specific version and package list file:
./isoBuilder -v <photon-release-version> -p packages_minimal.json
This process will create a custom ISO based on the packages and configurations you specified12.

If you have any specific requirements or run into issues, feel free to ask!


1
Build a Custom ISO from the Source Code of Photon OS Installer - GitHub

2
Overview - GitHub

Edit in Pages




AI-generated content may be incorrect
You said:

how to add a kickstart file
Copilot said:
Copilot
To add a kickstart file to your custom Photon OS ISO, follow these steps:

Steps to Add a Kickstart File
Mount the Photon OS ISO:

First, mount the Photon OS ISO to a temporary directory:
mkdir /tmp/photon-iso
sudo mount -o loop photon.iso /tmp/photon-iso
Copy ISO Contents:

Copy the contents of the mounted ISO to a writable directory:
mkdir /tmp/photon-ks-iso
cp -r /tmp/photon-iso/* /tmp/photon-ks-iso/
Modify the Kickstart File:

Locate the sample kickstart file in the isolinux directory and modify it as needed:
cp /tmp/photon-ks-iso/isolinux/sample_ks.cfg /tmp/photon-ks-iso/isolinux/ks.cfg
nano /tmp/photon-ks-iso/isolinux/ks.cfg
Update Boot Configuration:

Edit the isolinux.cfg file to include the kickstart file:
nano /tmp/photon-ks-iso/isolinux/isolinux.cfg
Add the following line to the appropriate boot entry:
append initrd=initrd.img ks=cdrom:/isolinux/ks.cfg
Rebuild the ISO:

Rebuild the ISO with the modified contents:
mkisofs -o custom-photon.iso -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -V "Custom Photon OS" /tmp/photon-ks-iso
Example Kickstart File
Here's a basic example of a kickstart file (ks.cfg):

{
  "hostname": "photon-machine",
  "password": {
    "crypted": false,
    "text": "changeme"
  },
  "disk": "/dev/sda",
  "partitions": [
    { "mountpoint": "/", "size": 0, "filesystem": "ext4" },
    { "mountpoint": "/boot", "size": 128, "filesystem": "ext4" },
    { "size": 128, "filesystem": "swap" }
  ],
  "bootmode": "bios",
  "packagelist_file": "packages_minimal.json",
  "additional_packages": ["vim"],
  "postinstall": [
    "#!/bin/sh",
    "echo \"Hello World\" > /etc/postinstall"
  ],
  "public_key": "<ssh-key-here>",
  "network": {
    "type": "dhcp"
  }
}
This process will integrate your kickstart file into the custom Photon OS ISO, enabling automated installations12.

If you need further assistance or have specific requirements, feel free to ask!